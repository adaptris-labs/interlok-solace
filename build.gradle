import org.apache.tools.ant.taskdefs.condition.Os
import org.apache.tools.ant.filters.*
plugins {
  id "distribution"
  id "com.palantir.docker" version "0.25.0"
  id 'com.palantir.docker-compose' version "0.25.0"
}

ext {
  interlokCoreVersion = '3.10.1-RELEASE'
  interlokParentGradle = project.findProperty('interlokParentGradle') ?: 'https://raw.githubusercontent.com/adaptris-labs/interlok-build-parent/master/build.gradle'
  dockerImageName = project.findProperty('dockerImageName') ?: "adaptrislabs/interlok-solace"
  dockerImageTag = project.findProperty('dockerImageVersion') ?: "latest"
  buildEnv=project.findProperty("buildEnv") ?: "docker"
  solaceVersion='10.9.0'
  includeWar='true'
  // license-{buildEnv}.properties needs to be copied.
  additionalTemplatedProperties = [
    'license'
  ]
  // Ensure variable substitutions work for 'check'
  interlokVerifyEnvironmentProperties = [
    SOLACE_HOST: "localhost",
    SOLACE_PORT: "55555",
    SOLACE_USER: "admin",
    SOLACE_PASSWORD: "admin"
  ]
}

allprojects {
  apply from: "${interlokParentGradle}"
}

dependencies {
  interlokRuntime ("com.adaptris:interlok-solace:$interlokCoreVersion") { changing= true}
  interlokRuntime ("com.adaptris:interlok-xa-jms:$interlokCoreVersion") { changing=true }
  interlokRuntime ("com.adaptris:interlok-xa-solace:$interlokCoreVersion") { changing=true }

  interlokRuntime ("com.solacesystems:sol-jms:$solaceVersion")
  interlokRuntime ("com.solacesystems:sol-common:$solaceVersion")
  interlokRuntime ("com.solacesystems:sol-jcsmp:$solaceVersion")

  interlokRuntime ("org.fusesource.jansi:jansi:1.18")
}

docker {
  name dockerImageName
  tags dockerImageTag
  pull true
  files tasks.installDist.outputs
}

dockerCompose {
  dockerComposeFile "docker-compose.yml"
}

docker.dependsOn check, assemble
// dockerComposeUp.dependsOn docker
